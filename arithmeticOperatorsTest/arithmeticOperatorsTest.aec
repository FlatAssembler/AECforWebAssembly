/* 
 * After I've written 3'000 lines of code of my AEC-to-WebAssembly compiler,
 * I should finally be able to compile some simple AEC programs so that they
 * can run in a browser.
 */

Function add(Integer32 first,
        Integer32 second)
    Which Returns Integer32 Does
        Return first+second;
EndFunction

Function subtract(Integer32 first,
        Integer32 second)
    Which Returns Integer32 Does
        Return first-second;
EndFunction

Function multiply(Integer32 first,
        Integer32 second)
    Which Returns Integer32 Does
        Return first*second;
EndFunction

Function integerDivision(Integer32 first,
        Integer32 second)
    Which Returns Integer32 Does
        Return not(second=0)?
                            first/second
                            :
                            0; //Protect yourself from division
                               //by zero, by returning 0 then.
                               //Doesn't make perfect sense, but
                               //probably makes more sense than
                               //crashing the program.
EndFunction

Function modulo(Integer32 first,
        Integer32 second)
    Which Returns Integer32 Does
        Return not(second=0)?
                            mod(first,second)
                            :
                            first; //Have a better idea
                                   //what to do when the
                                   //second number is 0?
EndFunction

Function decimalDivision(Integer32 first,
        Integer32 second)
    Which Returns Decimal32 Does
        Return Decimal32(first)/second; //"Decimal32(" here is the casting
                                        //operator, equivalent to the
                                        //C casting operator "(float)"
EndFunction

Function maximum(Integer32 first,
        Integer32 second)
    Which Returns Integer32 Does
        Return (first>second)?
                             first
                             :
                             second;
EndFunction

Function minimum(Integer32 first,
        Integer32 second)
    Which Returns Integer32 Does
        Return (first<second)?
                             first
                             :
                             second;
EndFunction

Function signum(Integer32 number) Which Returns Integer32 Does
    /* 
     * The ternary conditional operator "?:" is right-associative,
     * as it is in C, C++ and JavaScript (unlike in PHP), which
     * makes it easy to abbreviate else-if statements using it.
     * And, as of time of writing this, I haven't yet implemented
     * the "If" statement into the AEC-to-WebAssembly compiler.
     */
    Return (number<0)? //If the number is less than 0...
                    -1 //signum of that number is -1...
                     : //else...
                     (number=0)? //if the number is 0...
                               0 //signum of that number is 0.
                               : //else...
                               1; //The signum of that number is 1.
EndFunction

Function xor(Integer32 first,
             Integer32 second)
     Which Returns Integer32 Does
        //I hope people will like the way I named the bit-operators.
        Return (first and invertBits(second)) or (invertBits(first) and second);
EndFunction

Function xor_using_assembly(Integer32 first,
                            Integer32 second)
     Which Returns Integer32 Does
	Return asm_i32(R"assembly(
(i32.xor
	(i32.load %first)
	(i32.load %second)
)
)assembly");
EndFunction

Function emptyFunction() Which Returns Nothing Does
    Nothing; //The compiler should no longer crash when compiling the
             //no-operation statement ("Nothing").
EndFunction
